//@execute 0=42
var F = [1f, 2f, 3f];
var D = [1d, 2d, 3d];
def main(a: int) -> int {
	var fx = F[a], fy = F[a+1];

	if (fx == 2f)		return -1;
	if (fx != 1f)		return -2;
	if (fy < fx)		return -3;
	if (fx > fy)		return -4;
	if (fy <= fx)		return -5;
	if (fx >= fy)		return -6;
	if (float.nan == float.nan) return -7;
	if (!(float.nan != float.nan)) return -8;

	if (fx.sign != 0)	return -9;
	if (fy.exponent != 1)	return -10;
	if (fy.fraction != 0)	return -11;

	if ((fx + fy) != 3f)	return -12;
	if ((fx - fy) != -1f)	return -13;
	if ((fx * fy) != 2f)	return -14;
	if ((fx / fy) != 0.5f)	return -15;

	if (fx != float.abs(fx)) return -16;
	if (fx != float.ceil(fx)) return -17;
	if (fx != float.floor(fx)) return -18;
	if (1f != float.sqrt(fx)) return -19;

	if (!int.?(fx)) return -20;
	if (int.!(fx) != 1) return -21;
	if (int.truncf(fx) != 1) return -22;

	var dx = D[a], dy = D[a+1];

	if (dx == 2f)		return -31;
	if (dx != 1f)		return -32;
	if (dy < dx)		return -33;
	if (dx > dy)		return -34;
	if (dy <= dx)		return -35;
	if (dx >= dy)		return -36;
	if (double.nan == double.nan) return -37;
	if (!(double.nan != double.nan)) return -38;

	if (dx.sign != 0)	return -39;
	if (dy.exponent != 1)	return -40;
	if (dy.fraction != 0)	return -41;

	if ((dx + dy) != 3f)	return -42;
	if ((dx - dy) != -1f)	return -43;
	if ((dx * dy) != 2f)	return -44;
	if ((dx / dy) != 0.5f)	return -45;

	if (dx != double.abs(dx)) return -46;
	if (dx != double.ceil(dx)) return -47;
	if (dx != double.floor(dx)) return -48;

	if (!int.?(dx)) return -49;
	if (int.!(dx) != 1) return -50;
	if (int.truncd(dx) != 1) return -51;
	if (!float.?(dx)) return -52;
	if (fx != float.!(dx)) return -53;

	if (1f != float.roundi(a + 1)) return -54;
	if (1d != double.roundi(a + 1)) return -55;

	return 42;
}
