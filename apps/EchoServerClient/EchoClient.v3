// Copyright 2022 Kunal Sareen. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

/**
 * This implements a simple echo client that connects to 127.0.0.1:5555 or
 * ::1:5555 and sends the message provided by the user from the commandline.
 */

def EXIT_FAILURE = -1;
def options = BasicOptions.new(null);
def help    = options.newBoolOption("h", false);
def v6      = options.newBoolOption("v6", false);

def usage() {
	System.puts("Usage: EchoClient [-h] [-v6] \"<message string>\"\n");
	System.puts("  -h   Print this option summary\n");
	System.puts("  -v6  Use IPv6 instead of IPv4\n");
	RiOs.exit(EXIT_FAILURE);
}

def main(args: Array<string>) {
	args = options.parse(args);
	if (help.get() || args.length == 0) {
		usage();
	}

	def localhost = if(v6.get(), Net.LOCALHOST_V6, Net.LOCALHOST_V4);
	def sock = ClientSocket.new(localhost, 5555);
	def buffer = Array<byte>.new(512);
	def strBldr = StringBuilder.new();

	if (args.length == 0 || args.length > 1) {
		usage();
	}

	strBldr.put1("Hello! Socket opened on fd %d\n", sock.fd);
	System.puts(strBldr.toString());

	def ret = sock.connect();
	if (ret == -1) {
		System.error("Error", "Socket connection failed!");
	}

	strBldr.put3(
		"Created socket connection from %q:%d to %q",
		sock.addr.render,
		sock.localPort,
		sock.addr.render
	);
	strBldr.put1(":%d\n", sock.port);
	System.puts(strBldr.toString());

	def msg = args[0];
	strBldr.put1("send msg: \"%s\"\n", Strings.strip(msg));
	System.puts(strBldr.toString());
	sock.write(args[0]);

	def numRead = sock.read(buffer);
	def recvMsg: string = Arrays.range(buffer, 0, numRead);
	if (!Strings.equal(msg, recvMsg)) {
		strBldr.put1("Received different msg than sent: \"%s\"\n", recvMsg);
	} else {
		strBldr.puts("Received same msg!\n");
	}
	System.puts(strBldr.toString());
	sock.close();
}
