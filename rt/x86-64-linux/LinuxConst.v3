// Copyright 2021 Ben L. Titzer, Virgil authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Defines constants associated with (x86-64) Linux system calls.
// XXX: some duplication with constants from other platforms.
component LinuxConst {
	// Standard file descriptors.
	def STDIN  = 0;
	def STDOUT = 1;
	def STDERR = 2;
	// Maximum length of a path.
	def MAXPATHLEN = 1024;
	// Constants associated with open().
	def O_RDONLY	= 0;      // open read-only
	def O_WRONLY	= 1;      // open write-only
	def O_RDWR	= 2;      // open read-write
	def O_NONBLOCK  = 0x0800; // no delay
	def O_APPEND    = 0x0400; // set append mode
	def O_SYNC      = 0x1000; // synch I/O file integrity
	def O_ASYNC     = 0x2000; // signal pgrp when data ready
	def O_CREAT     = 0x0040; // create if nonexistent
	def O_TRUNC     = 0x0200; // truncate to zero length
	def O_EXCL      = 0x0080; // error if already exists
	def O_NOCTTY    = 0x0100; // don't assign controlling terminal

	// Constants for networking
	def AF_UNIX  = 0x1;
	def AF_INET  = 0x2;
	def AF_INET6 = 0xA;
	def SOCK_STREAM = 0x1;
	def SOCK_DGRAM  = 0x2;
	def SOCK_NONBLOCK = 0x0800;
	def SOCK_CLOEXEC  = 0x8000;
	def SOCKADDR_V4_SIZE   = 16;
	def SOCKADDR_V6_SIZE   = 28;
	def SOCKADDR_UNIX_SIZE = 110;

	// Constants for lseek().
	def SEEK_SET = 0;
	def SEEK_CUR = 1;
	def SEEK_END = 2;
	// Constants for mmap.
	def PROT_READ = 0x1;
	def PROT_WRITE = 0x2;
	def PROT_EXEC = 0x4;
	def PROT_NONE = 0x0;
	def MAP_SHARED = 0x1;
	def MAP_PRIVATE = 0x2;
	def MAP_FIXED = 0x10;
	def MAP_ANONYMOUS = 0x20;

	// Constants for selected system call numbers.
	def SYS_read		= 0;
	def SYS_write		= 1;
	def SYS_open		= 2;
	def SYS_close		= 3;
	def SYS_stat		= 4;
	def SYS_fstat		= 5;
	def SYS_lstat		= 6;
	def SYS_poll	 	= 7;
	def SYS_lseek		= 8;
	def SYS_mmap		= 9;
	def SYS_mprotect	= 10;
	def SYS_munmap		= 11;
	def SYS_rt_sigaction	= 13;
	def SYS_ioctl		= 16;
	def SYS_pipe		= 22;
	def SYS_select		= 23;
	def SYS_dup		= 32;
	def SYS_dup2		= 33;
	def SYS_socket		= 41;
	def SYS_connect		= 42;
	def SYS_bind		= 49;
	def SYS_getsockname	= 51;
	def SYS_fork		= 57;
	def SYS_vfork		= 58;
	def SYS_execve		= 59;
	def SYS_exit		= 60;
	def SYS_wait4		= 61;
	def SYS_chmod		= 90;
	def SYS_gettimeofday	= 96;
	def SYS_sigaltstack	= 131;

	// TODO: word offset of st_size in statbuf
	def STAT_BUF_SIZE = 144;
	def STAT_WOFF_ST_SIZE = 6;

	def error(val: int, description: string) -> int {
		// TODO: record the description in a table
		return val;
	}
}
