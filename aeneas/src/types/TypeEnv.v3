// Copyright 2011 Google Inc. All rights reserved.
// Copyright 2021 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A type environment, including type parameters that are bound within its scope
class TypeEnv {
	def parent: TypeEnv;
	def typeParams: List<TypeParamType>;
	def paramArray = TypeUtil.toTypeArray(typeParams);
	def typecons = Strings.newMap<TypeCon>();
	def other: string -> TypeCon;

	new(parent, typeParams, other) {
		// number the type parameters according to their position in the list
		var i = 0;
		for (list = typeParams; list != null; list = list.tail) {
			list.head.index = i++;
		}
	}
	def add(typeCon: TypeCon) {
		typecons[typeCon.name] = typeCon;
	}
	def lookup(name: string) -> TypeCon {
		for (e = this; e != null; e = e.parent) {
			var result = e.typecons[name];
			if (result != null) return result;
			if (e.other != null) result = e.other(name);
			if (result != null) return result;
		}
		return null;
	}
}
